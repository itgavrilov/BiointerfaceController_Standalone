plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.jlink' version '2.24.1'
}


//sourceCompatibility = '16'
//targetCompatibility = '16'

group 'ru.gsa.biointerfaceController_standalone'
mainClassName = 'ru.gsa.biointerfaceController_standalone.Main'
version '1.0-SNAPSHOT'

javafx {
    version = '16'
    modules = ['javafx.base', 'javafx.controls', 'javafx.fxml', 'javafx.graphics']
}

jlink {
    addExtraDependencies("javafx")
    launcher {
        name = 'biointerfaceController_standalone'
        mainClass = 'ru.gsa.biointerfaceController_standalone.Main'
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

//ext {
//    junitVersion = '5.7.1'
//}

def defaultEncoding = 'UTF-8'
[compileJava, compileTestJava]*.options*.encoding = defaultEncoding

tasks.getByName('compileJava') {
    //options.compilerArgs << "-Xlint:unchecked"
}

application {
    mainModule = 'ru.gsa.biointerfaceController_standalone'
    mainClass = "$mainClassName"
}


tasks.getByName('jar') {
    manifest {
        attributes(
                'Main-Class': "$mainClassName",
                'Implementation-Title': project.name,
                'Implementation-Version': version,
                'Build-Revision': version,
//                'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Created-By': "itgavrilov@gmail.com"
        )
    }
    //from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

dependencies {
    implementation('com.fazecast:jSerialComm:2.7.0')

    implementation('net.synedra:validatorfx:0.1.13') {
        exclude(group: 'org.openjfx')
    }

//    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
//    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

//test {
//    useJUnitPlatform()
//}